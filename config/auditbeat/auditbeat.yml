auditbeat.modules:

- module: auditd
  audit_rules: |
    #    -w /etc/passwd -p wa -k identity
    #    -a always,exit -F arch=b32 -S open,creat,truncate,ftruncate,openat,open_by_handle_at -F exit=-EPERM -k access
    #
    ## Define audit rules here.
    ## Create file watches (-w) or syscall audits (-a or -A). Uncomment these
    ## examples or add your own rules.
    ## If you are on a 64 bit platform, everything should be running
    ## in 64 bit mode. This rule will detect any use of the 32 bit syscalls
    ## because this might be a sign of someone exploiting a hole in the 32
    ## bit API.
    -a always,exit -F arch=b32 -S all -F key=32bit-abi
    ## Executions.
    -a always,exit -F arch=b64 -S execve,execveat -k exec
    ## External access (warning: these can be expensive to audit).
    -a always,exit -F arch=b64 -S accept,bind,connect -F key=external-access
    ## Identity changes.
    -w /etc/group -p wa -k identity
    -w /etc/passwd -p wa -k identity
    -w /etc/gshadow -p wa -k identity
    ## Unauthorized access attempts.
    -a always,exit -F arch=b64 -S open,creat,truncate,ftruncate,openat,open_by_handle_at -F exit=-EACCES -k access
    -a always,exit -F arch=b64 -S open,creat,truncate,ftruncate,openat,open_by_handle_at -F exit=-EPERM -k access

- module: file_integrity
  paths:
  - /bin
  - /usr/bin
  - /sbin
  - /usr/sbin
  - /etc

output.elasticsearch:
  hosts: ['elasticsearch:9200']
  protocol: "https"
  username: elastic
  # Read PW from auditbeat.keystore
  password: "${ELASTIC_PASSWORD}"
  ssl.certificate_authorities: ["/usr/share/auditbeat/certs/ca/ca.crt"]

setup.kibana:
  host: "http://kibana:5601"
  username: elastic
  password: "${ELASTIC_PASSWORD}"
  protocol: "http"
  ssl.enabled: false
  ssl.certificate_authorities: ["/usr/share/auditbeat/certs/ca/ca.crt"]

xpack.monitoring.enabled: true
